{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code5\\\\BookMyTaxiApp\\\\frontend\\\\src\\\\Components\\\\Users\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport 'leaflet-routing-machine';\nimport axios from 'axios';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [routingControl, setRoutingControl] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState('');\n  const [destination, setDestination] = useState('');\n  const [error, setError] = useState('');\n  const GEOCODE_API_KEY = 'b6c761d3da3f4599aa4fc4637807e570'; // Replace with your OpenCage API Key\n\n  useEffect(() => {\n    if (mapRef.current && !map) {\n      const newMap = L.map(mapRef.current).setView([22.3039, 70.8022], 12);\n      setMap(newMap);\n    }\n  }, [map]);\n  const geocodeCity = async city => {\n    try {\n      const response = await axios.get(`https://api.opencagedata.com/geocode/v1/json?q=${encodeURIComponent(city)}&key=${GEOCODE_API_KEY}`);\n      const {\n        results\n      } = response.data;\n      if (results && results.length > 0) {\n        const {\n          lat,\n          lng\n        } = results[0].geometry;\n        return [lat, lng]; // Return latitude and longitude as an array\n      } else {\n        throw new Error(`No results found for \"${city}\".`);\n      }\n    } catch (error) {\n      console.error('Geocoding error:', error.message);\n      setError(error.message);\n      return null;\n    }\n  };\n  const reverseGeocode = async (lat, lng) => {\n    try {\n      const response = await axios.get(`https://api.opencagedata.com/geocode/v1/json?q=${lat}+${lng}&key=${GEOCODE_API_KEY}`);\n      const {\n        results\n      } = response.data;\n      if (results && results.length > 0) {\n        return results[0].formatted; // Return formatted address\n      } else {\n        return 'Unknown Location';\n      }\n    } catch (error) {\n      console.error('Reverse Geocoding error:', error.message);\n      return 'Unknown Location';\n    }\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    setError('');\n\n    // Geocode the current location and destination\n    const startCoords = await geocodeCity(currentLocation);\n    const destCoords = await geocodeCity(destination);\n    if (startCoords && destCoords) {\n      // Reverse geocode to get city names\n      const startCity = await reverseGeocode(startCoords[0], startCoords[1]);\n      const destCity = await reverseGeocode(destCoords[0], destCoords[1]);\n\n      // Remove existing routing control, if any\n      if (routingControl) {\n        map.removeControl(routingControl);\n      }\n\n      // Create custom marker icons\n      const customIcon = L.divIcon({\n        html: `<i class=\"fa-solid fa-location-dot\" style=\"font-size: 24px; color: red;\"></i>`,\n        className: 'custom-icon',\n        iconSize: [24, 24],\n        // Icon size in pixels\n        iconAnchor: [12, 24] // Position the anchor point of the icon\n      });\n\n      // Add new routing control with custom markers\n      const newRoutingControl = L.Routing.control({\n        waypoints: [L.latLng(startCoords[0], startCoords[1]), L.latLng(destCoords[0], destCoords[1])],\n        routeWhileDragging: true,\n        createMarker: function (i, waypoint) {\n          const marker = L.marker(waypoint.latLng, {\n            icon: customIcon\n          });\n          if (i === 0) {\n            marker.bindPopup(`<b>Start:</b> ${startCity}`).openPopup(); // Add start city name\n          } else if (i === 1) {\n            marker.bindPopup(`<b>Destination:</b> ${destCity}`).openPopup(); // Add destination city name\n          }\n          return marker;\n        },\n        show: false // Disable turn-by-turn directions panel\n      }).addTo(map);\n      setRoutingControl(newRoutingControl);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: \"Enter Cities to See Route on Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      ref: mapRef,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px',\n          margin: '10px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Your City\",\n          value: currentLocation,\n          onChange: e => setCurrentLocation(e.target.value),\n          id: \"curlocation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Destination City\",\n          value: destination,\n          onChange: e => setDestination(e.target.value),\n          id: \"destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Show Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginTop: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Home, \"PhYrNRBizDH14ioE1QDVjhE69zo=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","mapRef","map","setMap","routingControl","setRoutingControl","currentLocation","setCurrentLocation","destination","setDestination","error","setError","GEOCODE_API_KEY","current","newMap","setView","geocodeCity","city","response","get","encodeURIComponent","results","data","length","lat","lng","geometry","Error","console","message","reverseGeocode","formatted","handleFormSubmit","e","preventDefault","startCoords","destCoords","startCity","destCity","removeControl","customIcon","divIcon","html","className","iconSize","iconAnchor","newRoutingControl","Routing","control","waypoints","latLng","routeWhileDragging","createMarker","i","waypoint","marker","icon","bindPopup","openPopup","show","addTo","children","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","onSubmit","style","display","gap","margin","type","placeholder","value","onChange","target","color","marginTop","_c","$RefreshReg$"],"sources":["E:/Code5/BookMyTaxiApp/frontend/src/Components/Users/Home.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport 'leaflet-routing-machine';\r\nimport axios from 'axios';\r\nimport './Home.css';\r\n\r\nexport default function Home() {\r\n  const mapRef = useRef(null);\r\n  const [map, setMap] = useState(null);\r\n  const [routingControl, setRoutingControl] = useState(null);\r\n  const [currentLocation, setCurrentLocation] = useState('');\r\n  const [destination, setDestination] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const GEOCODE_API_KEY = 'b6c761d3da3f4599aa4fc4637807e570'; // Replace with your OpenCage API Key\r\n\r\n  useEffect(() => {\r\n    if (mapRef.current && !map) {\r\n      const newMap = L.map(mapRef.current).setView([22.3039, 70.8022], 12);\r\n\r\n      setMap(newMap);\r\n    }\r\n  }, [map]);\r\n\r\n  const geocodeCity = async (city) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.opencagedata.com/geocode/v1/json?q=${encodeURIComponent(city)}&key=${GEOCODE_API_KEY}`\r\n      );\r\n      const { results } = response.data;\r\n\r\n      if (results && results.length > 0) {\r\n        const { lat, lng } = results[0].geometry;\r\n        return [lat, lng]; // Return latitude and longitude as an array\r\n      } else {\r\n        throw new Error(`No results found for \"${city}\".`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Geocoding error:', error.message);\r\n      setError(error.message);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const reverseGeocode = async (lat, lng) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.opencagedata.com/geocode/v1/json?q=${lat}+${lng}&key=${GEOCODE_API_KEY}`\r\n      );\r\n      const { results } = response.data;\r\n\r\n      if (results && results.length > 0) {\r\n        return results[0].formatted; // Return formatted address\r\n      } else {\r\n        return 'Unknown Location';\r\n      }\r\n    } catch (error) {\r\n      console.error('Reverse Geocoding error:', error.message);\r\n      return 'Unknown Location';\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(''); \r\n\r\n    // Geocode the current location and destination\r\n    const startCoords = await geocodeCity(currentLocation);\r\n    const destCoords = await geocodeCity(destination);\r\n\r\n    if (startCoords && destCoords) {\r\n      // Reverse geocode to get city names\r\n      const startCity = await reverseGeocode(startCoords[0], startCoords[1]);\r\n      const destCity = await reverseGeocode(destCoords[0], destCoords[1]);\r\n\r\n      // Remove existing routing control, if any\r\n      if (routingControl) {\r\n        map.removeControl(routingControl);\r\n      }\r\n\r\n      // Create custom marker icons\r\n      const customIcon = L.divIcon({\r\n        html: `<i class=\"fa-solid fa-location-dot\" style=\"font-size: 24px; color: red;\"></i>`,\r\n        className: 'custom-icon',\r\n        iconSize: [24, 24], // Icon size in pixels\r\n        iconAnchor: [12, 24], // Position the anchor point of the icon\r\n      });\r\n\r\n      // Add new routing control with custom markers\r\n      const newRoutingControl = L.Routing.control({\r\n        waypoints: [\r\n          L.latLng(startCoords[0], startCoords[1]),\r\n          L.latLng(destCoords[0], destCoords[1]),\r\n        ],\r\n        routeWhileDragging: true,\r\n        createMarker: function (i, waypoint) {\r\n          const marker = L.marker(waypoint.latLng, { icon: customIcon });\r\n          if (i === 0) {\r\n            marker.bindPopup(`<b>Start:</b> ${startCity}`).openPopup(); // Add start city name\r\n          } else if (i === 1) {\r\n            marker.bindPopup(`<b>Destination:</b> ${destCity}`).openPopup(); // Add destination city name\r\n          }\r\n          return marker;\r\n        },\r\n        show: false, // Disable turn-by-turn directions panel\r\n      }).addTo(map);\r\n\r\n      setRoutingControl(newRoutingControl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">Enter Cities to See Route on Map</div>\r\n      <div id=\"map\" ref={mapRef} className=\"map-container\"></div>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div style={{ display: 'flex', gap: '10px', margin: '10px 0' }}>\r\n          <input type=\"text\" placeholder=\"Enter Your City\" value={currentLocation} onChange={(e) => setCurrentLocation(e.target.value)} id=\"curlocation\"/>\r\n          <input type=\"text\" placeholder=\"Enter Destination City\" value={destination} onChange={(e) => setDestination(e.target.value)} id=\"destination\"/>\r\n        </div>\r\n        <input type=\"submit\" value=\"Show Route\" />\r\n      </form>\r\n      {error && <div style={{ color: 'red', marginTop: '10px' }}>{error}</div>}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}