{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code5\\\\BookMyTaxiApp\\\\frontend\\\\src\\\\Components\\\\Users\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport 'leaflet-routing-machine';\nimport axios from 'axios';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [routingControl, setRoutingControl] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState('');\n  const [destination, setDestination] = useState('');\n  const [error, setError] = useState('');\n  const GEOCODE_API_KEY = 'b6c761d3da3f4599aa4fc4637807e570'; // Replace with your OpenCage API Key\n\n  useEffect(() => {\n    if (mapRef.current && !map) {\n      const newMap = L.map(mapRef.current).setView([70.7833, -0.09], 13);\n      L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(newMap);\n      setMap(newMap);\n    }\n  }, [map]);\n  const geocodeCity = async city => {\n    try {\n      const response = await axios.get(`https://api.opencagedata.com/geocode/v1/json?q=${encodeURIComponent(city)}&key=${GEOCODE_API_KEY}`);\n      const {\n        results\n      } = response.data;\n      if (results && results.length > 0) {\n        const {\n          lat,\n          lng\n        } = results[0].geometry;\n        return [lat, lng]; // Return latitude and longitude as an array\n      } else {\n        throw new Error(`No results found for \"${city}\".`);\n      }\n    } catch (error) {\n      console.error('Geocoding error:', error.message);\n      setError(error.message);\n      return null;\n    }\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    setError(''); // Clear previous errors\n\n    // Geocode the current location and destination\n    const startCoords = await geocodeCity(currentLocation);\n    const destCoords = await geocodeCity(destination);\n    if (startCoords && destCoords) {\n      // Remove existing routing control, if any\n      if (routingControl) {\n        map.removeControl(routingControl);\n      }\n\n      // Add new routing control\n      const newRoutingControl = L.Routing.control({\n        waypoints: [L.latLng(startCoords[0], startCoords[1]), L.latLng(destCoords[0], destCoords[1])],\n        routeWhileDragging: true,\n        createMarker: function (i, waypoint) {\n          return L.marker(waypoint.latLng);\n        },\n        show: false // Disable turn-by-turn directions panel\n      }).addTo(map);\n      setRoutingControl(newRoutingControl);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: \"Enter Cities to See Route on Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      ref: mapRef,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px',\n          margin: '10px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Your City\",\n          value: currentLocation,\n          onChange: e => setCurrentLocation(e.target.value),\n          id: \"curlocation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Destination City\",\n          value: destination,\n          onChange: e => setDestination(e.target.value),\n          id: \"destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Show Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginTop: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Home, \"PhYrNRBizDH14ioE1QDVjhE69zo=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","mapRef","map","setMap","routingControl","setRoutingControl","currentLocation","setCurrentLocation","destination","setDestination","error","setError","GEOCODE_API_KEY","current","newMap","setView","tileLayer","attribution","addTo","geocodeCity","city","response","get","encodeURIComponent","results","data","length","lat","lng","geometry","Error","console","message","handleFormSubmit","e","preventDefault","startCoords","destCoords","removeControl","newRoutingControl","Routing","control","waypoints","latLng","routeWhileDragging","createMarker","i","waypoint","marker","show","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","onSubmit","style","display","gap","margin","type","placeholder","value","onChange","target","color","marginTop","_c","$RefreshReg$"],"sources":["E:/Code5/BookMyTaxiApp/frontend/src/Components/Users/Home.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport 'leaflet-routing-machine';\r\nimport axios from 'axios';\r\nimport './Home.css';\r\n\r\nexport default function Home() {\r\n  const mapRef = useRef(null);\r\n  const [map, setMap] = useState(null);\r\n  const [routingControl, setRoutingControl] = useState(null);\r\n  const [currentLocation, setCurrentLocation] = useState('');\r\n  const [destination, setDestination] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const GEOCODE_API_KEY = 'b6c761d3da3f4599aa4fc4637807e570'; // Replace with your OpenCage API Key\r\n\r\n  useEffect(() => {\r\n    if (mapRef.current && !map) {\r\n      const newMap = L.map(mapRef.current).setView([70.7833, -0.09], 13);\r\n\r\n      L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n      }).addTo(newMap);\r\n\r\n      setMap(newMap);\r\n    }\r\n  }, [map]);\r\n\r\n  const geocodeCity = async (city) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.opencagedata.com/geocode/v1/json?q=${encodeURIComponent(city)}&key=${GEOCODE_API_KEY}`\r\n      );\r\n      const { results } = response.data;\r\n\r\n      if (results && results.length > 0) {\r\n        const { lat, lng } = results[0].geometry;\r\n        return [lat, lng]; // Return latitude and longitude as an array\r\n      } else {\r\n        throw new Error(`No results found for \"${city}\".`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Geocoding error:', error.message);\r\n      setError(error.message);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(''); // Clear previous errors\r\n\r\n    // Geocode the current location and destination\r\n    const startCoords = await geocodeCity(currentLocation);\r\n    const destCoords = await geocodeCity(destination);\r\n\r\n    if (startCoords && destCoords) {\r\n      // Remove existing routing control, if any\r\n      if (routingControl) {\r\n        map.removeControl(routingControl);\r\n      }\r\n\r\n      // Add new routing control\r\n      const newRoutingControl = L.Routing.control({\r\n        waypoints: [L.latLng(startCoords[0], startCoords[1]), L.latLng(destCoords[0], destCoords[1])],\r\n        routeWhileDragging: true,\r\n        createMarker: function (i, waypoint) {\r\n          return L.marker(waypoint.latLng);\r\n        },\r\n        show: false, // Disable turn-by-turn directions panel\r\n      }).addTo(map);\r\n\r\n      setRoutingControl(newRoutingControl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">Enter Cities to See Route on Map</div>\r\n      <div id=\"map\" ref={mapRef} className=\"map-container\"></div>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div style={{ display: 'flex', gap: '10px', margin: '10px 0' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Your City\"\r\n            value={currentLocation}\r\n            onChange={(e) => setCurrentLocation(e.target.value)}\r\n            id=\"curlocation\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Destination City\"\r\n            value={destination}\r\n            onChange={(e) => setDestination(e.target.value)}\r\n            id=\"destination\"\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"Show Route\" />\r\n      </form>\r\n      {error && <div style={{ color: 'red', marginTop: '10px' }}>{error}</div>}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}